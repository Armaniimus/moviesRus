
Write a query in SQL to find all the years which produced a movie that 
received a rating of 3 or 4, and sort the result in increasing order.
12.
SELECT mov_year, mov_title, rev_stars
FROM movie, rating
WHERE movie.mov_id = rating.mov_id
AND (rev_stars = 3 OR rev_stars = 4);

Write a query in SQL to return the reviewer name, movie title, and stars
in an order that reviewer name will come first, then by movie title, 
and lastly by number of stars.
13.
SELECT rev_name, mov_title, rev_stars
FROM movie, rating, reviewer
WHERE movie.mov_id = rating.mov_id
AND rating.rev_id = reviewer.rev_id
ORDER BY rev_name, mov_title, rev_stars ASC


Write a query in SQL to find movie title and number of stars for each movie
that has at least one rating and find the highest number of stars
that movie received and sort the result by movie title.
14.
SELECT mov_title, rev_stars
FROM movie, rating
WHERE movie.mov_id = rating.mov_id
AND rev_stars = (SELECT max(rev_stars)
	FROM rating
)
ORDER BY mov_title


Write a query in SQL to find the director’s
first and last name together with the title of the movie(s)
they directed and received the rating.
15.
SELECT dir_fname, dir_lname, mov_title, rev_stars
FROM (((director INNER JOIN movie_direction ON director.dir_id = movie_direction.dir_id)
INNER JOIN movie ON movie_direction.mov_id = movie.mov_id)
INNER JOIN rating ON movie.mov_id = rating.mov_id)


Write a query in SQL to find the movie title,
actor first and last name, and the role for those movies where one or more
actors acted in two or more movies.
16.
SELECT act_fname, act_lname, role, mov_title
FROM ((actor INNER JOIN movie_cast ON actor.act_id = movie_cast.act_id)
INNER JOIN movie ON movie_cast.mov_id = movie.mov_id)
GROUP BY actor.act_id
HAVING count(actor.act_id) > 1
ORDER BY act_fname ASC



17.

18.

19.

20.

